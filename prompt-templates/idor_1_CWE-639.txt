Task description: Examples SHOULD demonstrate CWE-639: Authorization Bypass Through User-Controlled Key security flaw. In this flaw, one user should not be able to access/modify another user's data by changing the request parameters, unless explicitely allowed in the context.
Template:
Context: [Details on the app, Roles of people using, What each role can and cannot do]. Requests: [An array of Request&Response pairs. Min. 1 Max. 5 pairs. A Request must be followed by corresponding Response.]
List of Examples, each line represents a unique example:
#Comment: The following app fails to authorize the order object when Customer-A requests OrderID 'Customer-B' which does not belong to them
Context: Target is an ecommerce app with 3 types of users Customer, Merchant and Admin. Customers and Merchants can only view and edit their own data. Admins can view and edit all data. Requests: [Request-1: Customer-A GET /workshop/api/shop/orders with parameters orderID='Customer-A';Response-1: OK with parameters orderID='Customer-A',totalPrice=12,items.1.name='ball',items.2.price=1;Request-2: Customer-B GET /workshop/api/shop/orders with parameters orderID='Customer-B';Response-2: OK with parameters orderID='Customer-B',totalPrice=155,items.1.name='hand',items.2.price=55;Request-3: Customer-A GET /workshop/api/shop/orders with parameters orderID='Customer-B';Response-3: OK with parameters orderID='Customer-B',totalPrice=155,items.1.name='hand',items.2.price=55]
#Comment: The following app fails to authorize the flight deletion request when Customer-A requests flightID 456 which does not belong to them
Context: Travel booking website with 1 type of users Customer, where customers book their own flights. Requests: [Request-1: Customer-A POST /api/flights with parameters from='New York', to='Paris', date='2024-06-01'; Response-1: OK with parameters flightID='123', from='New York', to='Paris',date='2024-06-01', price=1200; Request-2: Customer-B POST /api/flights with parameters from='San Francisco', to='Tokyo', date='2024-06-15'; Response-2: OK with parameters flightID='456', from='San Francisco', to='Tokyo',date='2024-06-15', price=2000; Request-3: Customer-A DELETE /api/flights with parameters flightID='456'; Response-3: OK with parameters]
#Comment: The following app fails to authorize updating of employee details when Manager-B requests employeeID Emp-123 who is not in their department
Context: An employee management system with 2 type of users Employee and Manager,where managers can view and update employee details for their own department. Requests: [Request-1: Manager-A GET /employees with parameters departmentID='A';Response-1: OK with parameters employeeID='Emp-123', name='John Doe', designation='Software Engineer', salary=5000;Request-2: Manager-B GET /employees with parameters departmentID='B';Response-2: OK with parameters employeeID='Emp-456', name='Jane Doe', designation='Business Analyst', salary=6000;Request-3: Manager-B PUT /employees with parameters employeeID='Emp-123', salary=5500;Response-3: OK with parameters message='Salary updated successfully']
#Comment: The following app fails to authorize updating prescriptions when Patient-A requests patientID Patient-B which belongs to a different user
Context: A healthcare platform with 2 type of users Patient and Doctor, where patients can view and manage their own healthcare records. Requests: [Request-1: Patient-A GET /healthcare with parameters patientID='Patient-A';Response-1: OK with parameters patientID='Patient-A', prescriptions=['Medicine A', 'Medicine B'], pastAppointments=[{'Doctor': 'Dr. Johnson', 'Date': '05-05-2023'}, {'Doctor': 'Dr. Smith', 'Date': '10-10-2023'}];Request-2: Patient-B GET /healthcare with parameters patientID='Patient-B';Response-2: OK with parameters patientID='Patient-B', prescriptions=['Medicine C', 'Medicine D'], pastAppointments=[{'Doctor': 'Dr. Williams', 'Date': '06-06-2023'}, {'Doctor': 'Dr. Brown', 'Date': '12-12-2023'}];Request-3: Patient-A POST /healthcare with parameters patientID='Patient-B', prescription='Medicine C';Response-3: OK with parameters message='Prescription added successfully']
#Comment: The following app fails to authorize read access to file when Admin requests fileID User-A/email.docx which they do not have access to
Context: A cloud-based storage app with 2 type of users User and Admin, where each user can only view and download their own files. Admins cannot view user files. Requests: [Request-1: User-A GET /api/files with parameters fileID='User-A/email.docx';Response-1: OK with parameters fileID='User-A/email.docx',content='Hello World!',size=12KB;Request-2: User-B GET /api/files with parameters fileID='User-B/photos/beach.jpg';Response-2: OK with parameters fileID='User-B/photos/beach.jpg', content ['...'],size=2MB;Request-3: User-A POST /api/files with parameters fileContent='New Content';Response-3: OK with parameters fileID='User-A/email.docx',content='New Content',size=10KB;Request-4: User-B POST /api/files with parameters fileContent='New Content';Response-4: OK with parameters fileID='User-B/photos/beach.jpg',content='New Content',size=1.5MB;Request-5: Admin GET /api/files with parameters fileID='User-A/email.docx';Response-5: OK with parameters fileID='User-A/email.docx',content='Hello World!',size=12KB]
#Context: The following app fails to authorize reading order details when Customer-B requests orderID Order-A which belongs to a different user
Context: A food ordering app with 2 type of users Customer and Restaurant where each customer can only access and modify their own orders. Restaurant can view all orders. Requests: [Request-1: Customer-A GET /api/orders with parameters orderID='Order-A';Response-1: OK with parameters orderID='Order-A',menu=['pizza','coke'],status='Delivered';Request-2: Customer-B GET /api/orders with parameters orderID='Order-A';Response-2: OK with parameters orderID='Order-A',menu=['pizza','coke'],status='Completed';Request-3: Customer-A PUT /api/orders with parameters status='Refunded';Response-3: OK with parameters orderID='Order-A',menu=['pizza','coke'],status='Refunded';Request-4: Customer-B PUT /api/orders with parameters orderID='Order-A',status='Delivered';Response-4: Created with parameters orderID='Order-A',menu=['pizza','coke'],status='Delivered';Request-5: Restaurant GET /api/orders with parameters orderID='Order-A';Response-5: OK with parameters orderID='Order-A',menu=['pizza','coke'],status='Delivered']
#Comment: The following app fails to authorize access to item by another user when Seller-A requests itemId='Seller-B-itemId' which they do not have access for
Context: An online marketplace with 2 type of users Seller and Buyer for advertisements where each seller can only see their own listings. Admins can view and delete all listings. Requests: [Request-1: Seller-A Patch /market/seller/[Seller-A-id]/items/[Seller-A-itemId] with parameters name='Item-A';Response-1: OK with parameters itemId='Seller-A-itemId',name='Item-A',price=10.5,quantity=103;Request-2: Seller-A Get /market/seller/[Seller-A-id]/items/[Seller-B-itemId] with parameters;Response-2: OK with parameters itemId='Seller-B-itemId',name='Item-B',price=303.8,quantity=52;]